The ``1-my_list`` module
========================

Using ``1-my_list``
-------------------

Import function from module:
	>>> MyList = __import__('1-my_list').MyList

Correct Class type test:
	>>> ml = MyList()
	>>> type(ml) == MyList
	True

Correct Instance test:
	>>> ml = MyList()
	>>> isinstance(ml, list)
	True

print_sorted method is an instance method:
	>>> type(MyList.__dict__['print_sorted'])
	<class 'function'>

print_sorted method called via class with no args:
	>>> ml.__class__.print_sorted()
	    Traceback (most recent call last):
	    TypeError: print_sorted() missing 1 required positional argument:
		    'self'

print_sorted method called with 1 arg:
	>>> ml.print_sorted([4, 2, 5])
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 postional argument but 2 were given

print_sorted method called with 2 args:
	>>> ml.print_sorted([4, 2, 5], 1)
	Traceback (most recent call last):
	TypeError: print_sorted() takes 1 positional argument but 3 were given

Empty list_test:
	>>> ml = MyList()
	>>> ml.print_sorted()
	[]

Normal list test:
	>>> ml = MyList([3, 1, 2])
	>>> ml.print_sorted()
	[1, 2, 3]

Negative ints list test:
	>>> ml = MyList([-2, -4, -8])
	>>> ml.print_sorted()
	[-8, -4, -2]
