a ``7-base_geometry`` module
============================

Using ``7-base_geometry``
-------------------------

Import function from module

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
check area method is an instance of baseGeometry
	>>> type(BaseGeometry.__dict__['area'])
	<class 'function'>
apply area method
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

check integer validator is an instance of baseGeomemtry
	>>> type(BaseGeometry.__dict__['integer_validator']
	<class 'function'>

integer validator method called with no arg
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments:
	'name' and 'value'

integer validator method with one arg
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("ade")
	Traceback (most recent call last):
	...
	TypeError: BaseGeometyr.integer_validator() missing 1 required
	positional argument 'value'

integer validator method with value not an integer
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("ade", "enter")
	Traceback (most recent call last):
	...
	TypeError: ade must be an integer

integer validator method with value less than 0
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("ade", 0)
	Traceback (most recent call last):
	...
	ValueError: ade must be greater than 0
